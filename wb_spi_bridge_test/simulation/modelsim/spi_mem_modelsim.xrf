vendor_name = ModelSim
source_file = 1, D:/Github/2025-fpga-design-projects-fpga_SPI_I2C/wb_spi_bridge_test/serv_spi_ram-add_initial_changes/serv_spi_ram-add_initial_changes/servant/servive_clock_gen.v
source_file = 1, D:/Github/2025-fpga-design-projects-fpga_SPI_I2C/wb_spi_bridge_test/spi_mem_quartus.sv
source_file = 1, D:/Github/2025-fpga-design-projects-fpga_SPI_I2C/wb_spi_bridge_test/spi_mem_tb.v
source_file = 1, D:/Github/2025-fpga-design-projects-fpga_SPI_I2C/wb_spi_bridge_test/spi_mem.v
source_file = 1, D:/Github/2025-fpga-design-projects-fpga_SPI_I2C/wb_spi_bridge_test/serv_spi_ram-add_initial_changes/serv_spi_ram-add_initial_changes/servant_spi/servant_spi_top.v
source_file = 1, D:/Github/2025-fpga-design-projects-fpga_SPI_I2C/wb_spi_bridge_test/serv_spi_ram-add_initial_changes/serv_spi_ram-add_initial_changes/servant_spi/servant_spi_slave_if.v
source_file = 1, D:/Github/2025-fpga-design-projects-fpga_SPI_I2C/wb_spi_bridge_test/serv_spi_ram-add_initial_changes/serv_spi_ram-add_initial_changes/servant_spi/servant_spi_ram.v
source_file = 1, D:/Github/2025-fpga-design-projects-fpga_SPI_I2C/wb_spi_bridge_test/serv_spi_ram-add_initial_changes/serv_spi_ram-add_initial_changes/servant_spi/servant_spi_master_if.v
source_file = 1, D:/Github/2025-fpga-design-projects-fpga_SPI_I2C/wb_spi_bridge_test/db/spi_mem.cbx.xml
design_name = spi_mem
instance = comp, \spi_sck~output , spi_sck~output, spi_mem, 1
instance = comp, \spi_ss~output , spi_ss~output, spi_mem, 1
instance = comp, \spi_mosi~output , spi_mosi~output, spi_mem, 1
instance = comp, \wb_clk_l~output , wb_clk_l~output, spi_mem, 1
instance = comp, \spi_miso_l~output , spi_miso_l~output, spi_mem, 1
instance = comp, \spi_sck_l~output , spi_sck_l~output, spi_mem, 1
instance = comp, \spi_ss_l~output , spi_ss_l~output, spi_mem, 1
instance = comp, \spi_mosi_l~output , spi_mosi_l~output, spi_mem, 1
instance = comp, \done~output , done~output, spi_mem, 1
instance = comp, \correct~output , correct~output, spi_mem, 1
instance = comp, \btn_test~output , btn_test~output, spi_mem, 1
instance = comp, \i_clk~input , i_clk~input, spi_mem, 1
instance = comp, \i_clk~inputclkctrl , i_clk~inputclkctrl, spi_mem, 1
instance = comp, \i_btn_n~input , i_btn_n~input, spi_mem, 1
instance = comp, \clock_gen|b[0]~0 , clock_gen|b[0]~0, spi_mem, 1
instance = comp, \clock_gen|b[0] , clock_gen|b[0], spi_mem, 1
instance = comp, \clock_gen|b[1] , clock_gen|b[1], spi_mem, 1
instance = comp, \clock_gen|b[2]~feeder , clock_gen|b[2]~feeder, spi_mem, 1
instance = comp, \clock_gen|b[2] , clock_gen|b[2], spi_mem, 1
instance = comp, \clock_gen|b[3]~feeder , clock_gen|b[3]~feeder, spi_mem, 1
instance = comp, \clock_gen|b[3] , clock_gen|b[3], spi_mem, 1
instance = comp, \clock_gen|b[4]~feeder , clock_gen|b[4]~feeder, spi_mem, 1
instance = comp, \clock_gen|b[4] , clock_gen|b[4], spi_mem, 1
instance = comp, \clock_gen|b[5]~feeder , clock_gen|b[5]~feeder, spi_mem, 1
instance = comp, \clock_gen|b[5] , clock_gen|b[5], spi_mem, 1
instance = comp, \clock_gen|b[6]~feeder , clock_gen|b[6]~feeder, spi_mem, 1
instance = comp, \clock_gen|b[6] , clock_gen|b[6], spi_mem, 1
instance = comp, \clock_gen|b[7]~feeder , clock_gen|b[7]~feeder, spi_mem, 1
instance = comp, \clock_gen|b[7] , clock_gen|b[7], spi_mem, 1
instance = comp, \clock_gen|b[8] , clock_gen|b[8], spi_mem, 1
instance = comp, \clock_gen|b[9] , clock_gen|b[9], spi_mem, 1
instance = comp, \i_rst_n~input , i_rst_n~input, spi_mem, 1
instance = comp, \clock_gen|r[0]~0 , clock_gen|r[0]~0, spi_mem, 1
instance = comp, \clock_gen|r[0] , clock_gen|r[0], spi_mem, 1
instance = comp, \clock_gen|r[1]~feeder , clock_gen|r[1]~feeder, spi_mem, 1
instance = comp, \clock_gen|r[1] , clock_gen|r[1], spi_mem, 1
instance = comp, \clock_gen|r[2]~feeder , clock_gen|r[2]~feeder, spi_mem, 1
instance = comp, \clock_gen|r[2] , clock_gen|r[2], spi_mem, 1
instance = comp, \clock_gen|r[3]~feeder , clock_gen|r[3]~feeder, spi_mem, 1
instance = comp, \clock_gen|r[3] , clock_gen|r[3], spi_mem, 1
instance = comp, \clock_gen|r[4] , clock_gen|r[4], spi_mem, 1
instance = comp, \clock_gen|r[5]~feeder , clock_gen|r[5]~feeder, spi_mem, 1
instance = comp, \clock_gen|r[5] , clock_gen|r[5], spi_mem, 1
instance = comp, \clock_gen|r[6] , clock_gen|r[6], spi_mem, 1
instance = comp, \clock_gen|r[7] , clock_gen|r[7], spi_mem, 1
instance = comp, \clock_gen|r[8]~feeder , clock_gen|r[8]~feeder, spi_mem, 1
instance = comp, \clock_gen|r[8] , clock_gen|r[8], spi_mem, 1
instance = comp, \clock_gen|r[9]~feeder , clock_gen|r[9]~feeder, spi_mem, 1
instance = comp, \clock_gen|r[9] , clock_gen|r[9], spi_mem, 1
instance = comp, \spi_master_if|state~21 , spi_master_if|state~21, spi_mem, 1
instance = comp, \spi_master_if|WideNor2~1 , spi_master_if|WideNor2~1, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[0]~16 , spi_master_if|clk_cnt[0]~16, spi_mem, 1
instance = comp, \spi_master_if|serial_clk~4 , spi_master_if|serial_clk~4, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[1]~18 , spi_master_if|clk_cnt[1]~18, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[1] , spi_master_if|clk_cnt[1], spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[2]~20 , spi_master_if|clk_cnt[2]~20, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[2] , spi_master_if|clk_cnt[2], spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[3]~22 , spi_master_if|clk_cnt[3]~22, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[3] , spi_master_if|clk_cnt[3], spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[4]~24 , spi_master_if|clk_cnt[4]~24, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[4] , spi_master_if|clk_cnt[4], spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[5]~26 , spi_master_if|clk_cnt[5]~26, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[5] , spi_master_if|clk_cnt[5], spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[6]~28 , spi_master_if|clk_cnt[6]~28, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[6] , spi_master_if|clk_cnt[6], spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[7]~30 , spi_master_if|clk_cnt[7]~30, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[7] , spi_master_if|clk_cnt[7], spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[8]~32 , spi_master_if|clk_cnt[8]~32, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[8] , spi_master_if|clk_cnt[8], spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[9]~34 , spi_master_if|clk_cnt[9]~34, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[9] , spi_master_if|clk_cnt[9], spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[10]~36 , spi_master_if|clk_cnt[10]~36, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[10] , spi_master_if|clk_cnt[10], spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[11]~38 , spi_master_if|clk_cnt[11]~38, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[11] , spi_master_if|clk_cnt[11], spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[12]~40 , spi_master_if|clk_cnt[12]~40, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[12] , spi_master_if|clk_cnt[12], spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[13]~42 , spi_master_if|clk_cnt[13]~42, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[13] , spi_master_if|clk_cnt[13], spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[14]~44 , spi_master_if|clk_cnt[14]~44, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[14] , spi_master_if|clk_cnt[14], spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[15]~46 , spi_master_if|clk_cnt[15]~46, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[15] , spi_master_if|clk_cnt[15], spi_mem, 1
instance = comp, \spi_master_if|Equal3~3 , spi_master_if|Equal3~3, spi_mem, 1
instance = comp, \spi_master_if|Equal3~0 , spi_master_if|Equal3~0, spi_mem, 1
instance = comp, \spi_master_if|Equal3~2 , spi_master_if|Equal3~2, spi_mem, 1
instance = comp, \spi_master_if|Equal3~1 , spi_master_if|Equal3~1, spi_mem, 1
instance = comp, \spi_master_if|Equal3~4 , spi_master_if|Equal3~4, spi_mem, 1
instance = comp, \spi_master_if|always2~0 , spi_master_if|always2~0, spi_mem, 1
instance = comp, \spi_master_if|clk_cnt[0] , spi_master_if|clk_cnt[0], spi_mem, 1
instance = comp, \spi_master_if|bit_cnt~6 , spi_master_if|bit_cnt~6, spi_mem, 1
instance = comp, \spi_master_if|bit_cnt[0]~2 , spi_master_if|bit_cnt[0]~2, spi_mem, 1
instance = comp, \spi_master_if|bit_cnt[0]~3 , spi_master_if|bit_cnt[0]~3, spi_mem, 1
instance = comp, \spi_master_if|bit_cnt[0] , spi_master_if|bit_cnt[0], spi_mem, 1
instance = comp, \spi_master_if|bit_cnt~5 , spi_master_if|bit_cnt~5, spi_mem, 1
instance = comp, \spi_master_if|bit_cnt[1] , spi_master_if|bit_cnt[1], spi_mem, 1
instance = comp, \spi_master_if|bit_cnt~4 , spi_master_if|bit_cnt~4, spi_mem, 1
instance = comp, \spi_master_if|bit_cnt[2] , spi_master_if|bit_cnt[2], spi_mem, 1
instance = comp, \spi_master_if|Equal2~0 , spi_master_if|Equal2~0, spi_mem, 1
instance = comp, \spi_master_if|serial_clk~1 , spi_master_if|serial_clk~1, spi_mem, 1
instance = comp, \spi_master_if|state~27 , spi_master_if|state~27, spi_mem, 1
instance = comp, \spi_master_if|state.TRANSMIT_COMMAND , spi_master_if|state.TRANSMIT_COMMAND, spi_mem, 1
instance = comp, \Selector4~0 , Selector4~0, spi_mem, 1
instance = comp, \state.00101 , state.00101, spi_mem, 1
instance = comp, \Selector1~0 , Selector1~0, spi_mem, 1
instance = comp, \state.00010 , state.00010, spi_mem, 1
instance = comp, \Selector2~0 , Selector2~0, spi_mem, 1
instance = comp, \state.00011 , state.00011, spi_mem, 1
instance = comp, \Selector5~0 , Selector5~0, spi_mem, 1
instance = comp, \state.00110 , state.00110, spi_mem, 1
instance = comp, \Selector6~0 , Selector6~0, spi_mem, 1
instance = comp, \state.00111 , state.00111, spi_mem, 1
instance = comp, \Selector7~0 , Selector7~0, spi_mem, 1
instance = comp, \state.01000 , state.01000, spi_mem, 1
instance = comp, \Selector69~0 , Selector69~0, spi_mem, 1
instance = comp, \Selector8~0 , Selector8~0, spi_mem, 1
instance = comp, \state.01001 , state.01001, spi_mem, 1
instance = comp, \Selector9~0 , Selector9~0, spi_mem, 1
instance = comp, \state.01010 , state.01010, spi_mem, 1
instance = comp, \Selector10~0 , Selector10~0, spi_mem, 1
instance = comp, \state.01011 , state.01011, spi_mem, 1
instance = comp, \Selector71~4 , Selector71~4, spi_mem, 1
instance = comp, \Selector70~0 , Selector70~0, spi_mem, 1
instance = comp, \Selector69~1 , Selector69~1, spi_mem, 1
instance = comp, \spi_master_if|serial_clk_delay~feeder , spi_master_if|serial_clk_delay~feeder, spi_mem, 1
instance = comp, \spi_master_if|serial_clk_delay , spi_master_if|serial_clk_delay, spi_mem, 1
instance = comp, \spi_master_if|always10~0 , spi_master_if|always10~0, spi_mem, 1
instance = comp, \spi_master_if|always10~1 , spi_master_if|always10~1, spi_mem, 1
instance = comp, \spi_master_if|cmd_reg[0] , spi_master_if|cmd_reg[0], spi_mem, 1
instance = comp, \Selector68~0 , Selector68~0, spi_mem, 1
instance = comp, \Selector68~1 , Selector68~1, spi_mem, 1
instance = comp, \wb_mem_sel[0] , wb_mem_sel[0], spi_mem, 1
instance = comp, \Selector71~8 , Selector71~8, spi_mem, 1
instance = comp, \Selector66~0 , Selector66~0, spi_mem, 1
instance = comp, \wb_mem_sel[2] , wb_mem_sel[2], spi_mem, 1
instance = comp, \Selector67~0 , Selector67~0, spi_mem, 1
instance = comp, \Selector67~1 , Selector67~1, spi_mem, 1
instance = comp, \wb_mem_sel[1] , wb_mem_sel[1], spi_mem, 1
instance = comp, \spi_master_if|Equal8~0 , spi_master_if|Equal8~0, spi_mem, 1
instance = comp, \spi_master_if|always10~2 , spi_master_if|always10~2, spi_mem, 1
instance = comp, \spi_master_if|cmd_reg[1] , spi_master_if|cmd_reg[1], spi_mem, 1
instance = comp, \spi_master_if|state~18 , spi_master_if|state~18, spi_mem, 1
instance = comp, \spi_master_if|state~19 , spi_master_if|state~19, spi_mem, 1
instance = comp, \spi_master_if|state.TEMP_STATE , spi_master_if|state.TEMP_STATE, spi_mem, 1
instance = comp, \spi_master_if|configed~0 , spi_master_if|configed~0, spi_mem, 1
instance = comp, \spi_master_if|configed~1 , spi_master_if|configed~1, spi_mem, 1
instance = comp, \spi_master_if|configed , spi_master_if|configed, spi_mem, 1
instance = comp, \spi_master_if|state~31 , spi_master_if|state~31, spi_mem, 1
instance = comp, \spi_master_if|state~32 , spi_master_if|state~32, spi_mem, 1
instance = comp, \spi_master_if|state.TRANSMIT_ADDRESS1 , spi_master_if|state.TRANSMIT_ADDRESS1, spi_mem, 1
instance = comp, \spi_master_if|state~28 , spi_master_if|state~28, spi_mem, 1
instance = comp, \spi_master_if|state~29 , spi_master_if|state~29, spi_mem, 1
instance = comp, \spi_master_if|state.TRANSMIT_ADDRESS2 , spi_master_if|state.TRANSMIT_ADDRESS2, spi_mem, 1
instance = comp, \spi_master_if|state~30 , spi_master_if|state~30, spi_mem, 1
instance = comp, \spi_master_if|state.TRANSMIT_ADDRESS3 , spi_master_if|state.TRANSMIT_ADDRESS3, spi_mem, 1
instance = comp, \spi_master_if|sel_dec_last[0]~0 , spi_master_if|sel_dec_last[0]~0, spi_mem, 1
instance = comp, \spi_master_if|last_byte[0] , spi_master_if|last_byte[0], spi_mem, 1
instance = comp, \spi_master_if|serial_clk~clkctrl , spi_master_if|serial_clk~clkctrl, spi_mem, 1
instance = comp, \spi_master_if|state~24 , spi_master_if|state~24, spi_mem, 1
instance = comp, \spi_master_if|state~25 , spi_master_if|state~25, spi_mem, 1
instance = comp, \spi_master_if|state~26 , spi_master_if|state~26, spi_mem, 1
instance = comp, \spi_master_if|state.READ_DATA , spi_master_if|state.READ_DATA, spi_mem, 1
instance = comp, \spi_master_if|byte_offset[0]~4 , spi_master_if|byte_offset[0]~4, spi_mem, 1
instance = comp, \spi_master_if|sel_dec_start[0]~1 , spi_master_if|sel_dec_start[0]~1, spi_mem, 1
instance = comp, \spi_master_if|address_reg[0] , spi_master_if|address_reg[0], spi_mem, 1
instance = comp, \spi_master_if|byte_offset[0]~5 , spi_master_if|byte_offset[0]~5, spi_mem, 1
instance = comp, \spi_master_if|byte_offset[0]~6 , spi_master_if|byte_offset[0]~6, spi_mem, 1
instance = comp, \spi_master_if|byte_offset[0] , spi_master_if|byte_offset[0], spi_mem, 1
instance = comp, \spi_master_if|Add2~0 , spi_master_if|Add2~0, spi_mem, 1
instance = comp, \spi_master_if|sel_dec_start[1]~0 , spi_master_if|sel_dec_start[1]~0, spi_mem, 1
instance = comp, \spi_master_if|address_reg[1] , spi_master_if|address_reg[1], spi_mem, 1
instance = comp, \spi_master_if|byte_offset[0]~7 , spi_master_if|byte_offset[0]~7, spi_mem, 1
instance = comp, \spi_master_if|byte_offset[1] , spi_master_if|byte_offset[1], spi_mem, 1
instance = comp, \spi_master_if|sel_dec_last[1]~1 , spi_master_if|sel_dec_last[1]~1, spi_mem, 1
instance = comp, \spi_master_if|last_byte[1] , spi_master_if|last_byte[1], spi_mem, 1
instance = comp, \spi_master_if|state~16 , spi_master_if|state~16, spi_mem, 1
instance = comp, \spi_master_if|state~22 , spi_master_if|state~22, spi_mem, 1
instance = comp, \spi_master_if|state~23 , spi_master_if|state~23, spi_mem, 1
instance = comp, \spi_master_if|state.TRANSMIT_DATA , spi_master_if|state.TRANSMIT_DATA, spi_mem, 1
instance = comp, \spi_master_if|serial_clk~2 , spi_master_if|serial_clk~2, spi_mem, 1
instance = comp, \spi_master_if|state~20 , spi_master_if|state~20, spi_mem, 1
instance = comp, \spi_master_if|state.FINISH , spi_master_if|state.FINISH, spi_mem, 1
instance = comp, \Selector3~0 , Selector3~0, spi_mem, 1
instance = comp, \state~20 , state~20, spi_mem, 1
instance = comp, \state.00100 , state.00100, spi_mem, 1
instance = comp, \Selector71~6 , Selector71~6, spi_mem, 1
instance = comp, \Selector71~7 , Selector71~7, spi_mem, 1
instance = comp, \Selector70~1 , Selector70~1, spi_mem, 1
instance = comp, \spi_master_if|state~17 , spi_master_if|state~17, spi_mem, 1
instance = comp, \spi_master_if|state.IDLE , spi_master_if|state.IDLE, spi_mem, 1
instance = comp, \spi_master_if|WideNor2~0 , spi_master_if|WideNor2~0, spi_mem, 1
instance = comp, \spi_master_if|serial_clk~0 , spi_master_if|serial_clk~0, spi_mem, 1
instance = comp, \spi_master_if|serial_clk~3 , spi_master_if|serial_clk~3, spi_mem, 1
instance = comp, \spi_master_if|serial_clk , spi_master_if|serial_clk, spi_mem, 1
instance = comp, \spi_master_if|Equal5~0 , spi_master_if|Equal5~0, spi_mem, 1
instance = comp, \Selector19~0 , Selector19~0, spi_mem, 1
instance = comp, \wb_mem_adr[15] , wb_mem_adr[15], spi_mem, 1
instance = comp, \spi_master_if|address_reg[15] , spi_master_if|address_reg[15], spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~1 , spi_master_if|spi_out_reg~1, spi_mem, 1
instance = comp, \spi_master_if|always10~3 , spi_master_if|always10~3, spi_mem, 1
instance = comp, \spi_master_if|WideNor0~0 , spi_master_if|WideNor0~0, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~23 , spi_master_if|spi_out_reg~23, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~24 , spi_master_if|spi_out_reg~24, spi_mem, 1
instance = comp, \spi_master_if|serial_clk_negedge , spi_master_if|serial_clk_negedge, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg[0] , spi_master_if|spi_out_reg[0], spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~20 , spi_master_if|spi_out_reg~20, spi_mem, 1
instance = comp, \spi_master_if|wr_data_reg[10] , spi_master_if|wr_data_reg[10], spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~19 , spi_master_if|spi_out_reg~19, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~21 , spi_master_if|spi_out_reg~21, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~18 , spi_master_if|spi_out_reg~18, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~22 , spi_master_if|spi_out_reg~22, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg[1] , spi_master_if|spi_out_reg[1], spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~15 , spi_master_if|spi_out_reg~15, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~7 , spi_master_if|spi_out_reg~7, spi_mem, 1
instance = comp, \Selector46~0 , Selector46~0, spi_mem, 1
instance = comp, \wb_mem_dat[18] , wb_mem_dat[18], spi_mem, 1
instance = comp, \spi_master_if|wr_data_reg[18] , spi_master_if|wr_data_reg[18], spi_mem, 1
instance = comp, \spi_master_if|Mux5~1 , spi_master_if|Mux5~1, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~16 , spi_master_if|spi_out_reg~16, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~17 , spi_master_if|spi_out_reg~17, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg[2] , spi_master_if|spi_out_reg[2], spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~13 , spi_master_if|spi_out_reg~13, spi_mem, 1
instance = comp, \spi_master_if|Mux5~0 , spi_master_if|Mux5~0, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~14 , spi_master_if|spi_out_reg~14, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg[3] , spi_master_if|spi_out_reg[3], spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~10 , spi_master_if|spi_out_reg~10, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~11 , spi_master_if|spi_out_reg~11, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~12 , spi_master_if|spi_out_reg~12, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg[4] , spi_master_if|spi_out_reg[4], spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~6 , spi_master_if|spi_out_reg~6, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~8 , spi_master_if|spi_out_reg~8, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~9 , spi_master_if|spi_out_reg~9, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg[5] , spi_master_if|spi_out_reg[5], spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~3 , spi_master_if|spi_out_reg~3, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~4 , spi_master_if|spi_out_reg~4, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~5 , spi_master_if|spi_out_reg~5, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg[6] , spi_master_if|spi_out_reg[6], spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~0 , spi_master_if|spi_out_reg~0, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg~2 , spi_master_if|spi_out_reg~2, spi_mem, 1
instance = comp, \spi_master_if|spi_out_reg[7] , spi_master_if|spi_out_reg[7], spi_mem, 1
instance = comp, \spi_miso~input , spi_miso~input, spi_mem, 1
instance = comp, \done~0 , done~0, spi_mem, 1
instance = comp, \Selector71~5 , Selector71~5, spi_mem, 1
instance = comp, \Selector71~9 , Selector71~9, spi_mem, 1
instance = comp, \done~reg0feeder , done~reg0feeder, spi_mem, 1
instance = comp, \done~reg0 , done~reg0, spi_mem, 1
instance = comp, \spi_master_if|spi_in_reg[0]~feeder , spi_master_if|spi_in_reg[0]~feeder, spi_mem, 1
instance = comp, \spi_master_if|spi_in_reg[0] , spi_master_if|spi_in_reg[0], spi_mem, 1
instance = comp, \spi_master_if|spi_in_reg[1]~feeder , spi_master_if|spi_in_reg[1]~feeder, spi_mem, 1
instance = comp, \spi_master_if|spi_in_reg[1] , spi_master_if|spi_in_reg[1], spi_mem, 1
instance = comp, \spi_master_if|spi_in_reg[2]~feeder , spi_master_if|spi_in_reg[2]~feeder, spi_mem, 1
instance = comp, \spi_master_if|spi_in_reg[2] , spi_master_if|spi_in_reg[2], spi_mem, 1
instance = comp, \spi_master_if|spi_in_reg[3]~feeder , spi_master_if|spi_in_reg[3]~feeder, spi_mem, 1
instance = comp, \spi_master_if|spi_in_reg[3] , spi_master_if|spi_in_reg[3], spi_mem, 1
instance = comp, \spi_master_if|spi_in_reg[4]~feeder , spi_master_if|spi_in_reg[4]~feeder, spi_mem, 1
instance = comp, \spi_master_if|spi_in_reg[4] , spi_master_if|spi_in_reg[4], spi_mem, 1
instance = comp, \spi_master_if|spi_in_reg[5]~feeder , spi_master_if|spi_in_reg[5]~feeder, spi_mem, 1
instance = comp, \spi_master_if|spi_in_reg[5] , spi_master_if|spi_in_reg[5], spi_mem, 1
instance = comp, \spi_master_if|spi_in_reg[6]~feeder , spi_master_if|spi_in_reg[6]~feeder, spi_mem, 1
instance = comp, \spi_master_if|spi_in_reg[6] , spi_master_if|spi_in_reg[6], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[31]~feeder , spi_master_if|rd_data_reg[31]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[24]~3 , spi_master_if|rd_data_reg[24]~3, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[31] , spi_master_if|rd_data_reg[31], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[29]~feeder , spi_master_if|rd_data_reg[29]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[29] , spi_master_if|rd_data_reg[29], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[28]~feeder , spi_master_if|rd_data_reg[28]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[28] , spi_master_if|rd_data_reg[28], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[30] , spi_master_if|rd_data_reg[30], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[27]~feeder , spi_master_if|rd_data_reg[27]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[27] , spi_master_if|rd_data_reg[27], spi_mem, 1
instance = comp, \Selector72~8 , Selector72~8, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[22]~feeder , spi_master_if|rd_data_reg[22]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[16]~2 , spi_master_if|rd_data_reg[16]~2, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[22] , spi_master_if|rd_data_reg[22], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[19]~feeder , spi_master_if|rd_data_reg[19]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[19] , spi_master_if|rd_data_reg[19], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[20] , spi_master_if|rd_data_reg[20], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[21]~feeder , spi_master_if|rd_data_reg[21]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[21] , spi_master_if|rd_data_reg[21], spi_mem, 1
instance = comp, \Selector72~7 , Selector72~7, spi_mem, 1
instance = comp, \Selector72~9 , Selector72~9, spi_mem, 1
instance = comp, \Selector72~5 , Selector72~5, spi_mem, 1
instance = comp, \Selector72~3 , Selector72~3, spi_mem, 1
instance = comp, \Selector72~4 , Selector72~4, spi_mem, 1
instance = comp, \Selector72~6 , Selector72~6, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[1]~feeder , spi_master_if|rd_data_reg[1]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[0]~0 , spi_master_if|rd_data_reg[0]~0, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[1] , spi_master_if|rd_data_reg[1], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[2]~feeder , spi_master_if|rd_data_reg[2]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[2] , spi_master_if|rd_data_reg[2], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[0]~1 , spi_master_if|rd_data_reg[0]~1, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[0] , spi_master_if|rd_data_reg[0], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[4] , spi_master_if|rd_data_reg[4], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[3]~feeder , spi_master_if|rd_data_reg[3]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[3] , spi_master_if|rd_data_reg[3], spi_mem, 1
instance = comp, \Selector72~0 , Selector72~0, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[7]~feeder , spi_master_if|rd_data_reg[7]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[7] , spi_master_if|rd_data_reg[7], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[5] , spi_master_if|rd_data_reg[5], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[6]~feeder , spi_master_if|rd_data_reg[6]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[6] , spi_master_if|rd_data_reg[6], spi_mem, 1
instance = comp, \Selector72~1 , Selector72~1, spi_mem, 1
instance = comp, \Selector72~2 , Selector72~2, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[12]~feeder , spi_master_if|rd_data_reg[12]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[8]~4 , spi_master_if|rd_data_reg[8]~4, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[12] , spi_master_if|rd_data_reg[12], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[9]~feeder , spi_master_if|rd_data_reg[9]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[9] , spi_master_if|rd_data_reg[9], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[10] , spi_master_if|rd_data_reg[10], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[14] , spi_master_if|rd_data_reg[14], spi_mem, 1
instance = comp, \Selector72~10 , Selector72~10, spi_mem, 1
instance = comp, \Selector72~11 , Selector72~11, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[25]~feeder , spi_master_if|rd_data_reg[25]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[25] , spi_master_if|rd_data_reg[25], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[24]~feeder , spi_master_if|rd_data_reg[24]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[24] , spi_master_if|rd_data_reg[24], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[26] , spi_master_if|rd_data_reg[26], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[23]~feeder , spi_master_if|rd_data_reg[23]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[23] , spi_master_if|rd_data_reg[23], spi_mem, 1
instance = comp, \Selector72~15 , Selector72~15, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[18]~feeder , spi_master_if|rd_data_reg[18]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[18] , spi_master_if|rd_data_reg[18], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[17]~feeder , spi_master_if|rd_data_reg[17]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[17] , spi_master_if|rd_data_reg[17], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[15] , spi_master_if|rd_data_reg[15], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[16]~feeder , spi_master_if|rd_data_reg[16]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[16] , spi_master_if|rd_data_reg[16], spi_mem, 1
instance = comp, \Selector72~13 , Selector72~13, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[8]~feeder , spi_master_if|rd_data_reg[8]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[8] , spi_master_if|rd_data_reg[8], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[11]~feeder , spi_master_if|rd_data_reg[11]~feeder, spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[11] , spi_master_if|rd_data_reg[11], spi_mem, 1
instance = comp, \spi_master_if|rd_data_reg[13] , spi_master_if|rd_data_reg[13], spi_mem, 1
instance = comp, \Selector72~12 , Selector72~12, spi_mem, 1
instance = comp, \Selector72~14 , Selector72~14, spi_mem, 1
instance = comp, \Selector72~16 , Selector72~16, spi_mem, 1
instance = comp, \Selector72~17 , Selector72~17, spi_mem, 1
instance = comp, \correct~reg0feeder , correct~reg0feeder, spi_mem, 1
instance = comp, \correct~reg0 , correct~reg0, spi_mem, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
